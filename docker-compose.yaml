version: '3.8'

services:
  postgresdb:
    image: postgres
    container_name: postgres_c
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: utec
      POSTGRES_DB: micro2
    ports:
      - "8002:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecomecommerce-network
      
  microservicio2:
    build:
      context: ./micro2
      dockerfile: Dockerfile
    container_name: springboot_app
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_c:5432/micro2
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: utec
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - postgresdb
    networks:
      - ecomecommerce-network

  mongo:
    image: mongo:latest
    container_name: mongo_c
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecomecommerce-network

  microservice3:
    build:
      context: ./micro3 
      dockerfile: Dockerfile
    container_name: node_app
    ports:
      - "8083:8083"
    environment:
      MONGO_URI: mongodb://mongo_c:27017/micro3
    depends_on:
      - mongo
    networks:
      - ecomecommerce-network

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: utec
      MYSQL_DATABASE: micro1
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "8001:3306"
    networks:
      - ecomecommerce-network

  microservice1:
    build:
      context: ./micro1 
      dockerfile: Dockerfile
    container_name: micro1
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - microservice3
    environment:
      DATABASE_URL: mysql+pymysql://root:utec@mysql:3306/micro1
    networks:
      - ecomecommerce-network

  orquestador:
    build:
      context: ./orquestador 
      dockerfile: Dockerfile
    container_name: orquestador
    ports:
      - "8084:8084"
    depends_on:
      - microservice1
      - microservicio2
      - microservice3
    networks:
      - ecomecommerce-network
      
volumes:
  mysql_data:
  postgres_data:
  mongo_data:

networks:
  ecomecommerce-network:
    driver: bridge
